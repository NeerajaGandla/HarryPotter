// Generated by Dagger (https://dagger.dev).
package com.neeraja.harrypotter.presentation.viewmodels;

import com.neeraja.harrypotter.domain.entities.HouseEntity;
import com.neeraja.harrypotter.domain.usecases.GetHouseByIdTask;
import com.neeraja.harrypotter.presentation.mapper.Mapper;
import com.neeraja.harrypotter.presentation.models.House;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HouseDetailViewModel_Factory implements Factory<HouseDetailViewModel> {
  private final Provider<String> userIdentifierProvider;

  private final Provider<Mapper<HouseEntity, House>> mapperProvider;

  private final Provider<GetHouseByIdTask> getHouseByIdTaskProvider;

  public HouseDetailViewModel_Factory(Provider<String> userIdentifierProvider,
      Provider<Mapper<HouseEntity, House>> mapperProvider,
      Provider<GetHouseByIdTask> getHouseByIdTaskProvider) {
    this.userIdentifierProvider = userIdentifierProvider;
    this.mapperProvider = mapperProvider;
    this.getHouseByIdTaskProvider = getHouseByIdTaskProvider;
  }

  @Override
  public HouseDetailViewModel get() {
    return newInstance(userIdentifierProvider.get(), mapperProvider.get(), getHouseByIdTaskProvider.get());
  }

  public static HouseDetailViewModel_Factory create(Provider<String> userIdentifierProvider,
      Provider<Mapper<HouseEntity, House>> mapperProvider,
      Provider<GetHouseByIdTask> getHouseByIdTaskProvider) {
    return new HouseDetailViewModel_Factory(userIdentifierProvider, mapperProvider, getHouseByIdTaskProvider);
  }

  public static HouseDetailViewModel newInstance(String userIdentifier,
      Mapper<HouseEntity, House> mapper, GetHouseByIdTask getHouseByIdTask) {
    return new HouseDetailViewModel(userIdentifier, mapper, getHouseByIdTask);
  }
}

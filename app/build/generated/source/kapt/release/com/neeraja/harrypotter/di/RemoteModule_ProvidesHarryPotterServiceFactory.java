// Generated by Dagger (https://google.github.io/dagger).
package com.neeraja.harrypotter.di;

import com.neeraja.harrypotter.remote.api.HarryPotterService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class RemoteModule_ProvidesHarryPotterServiceFactory
    implements Factory<HarryPotterService> {
  private final RemoteModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RemoteModule_ProvidesHarryPotterServiceFactory(
      RemoteModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public HarryPotterService get() {
    return provideInstance(module, retrofitProvider);
  }

  public static HarryPotterService provideInstance(
      RemoteModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvidesHarryPotterService(module, retrofitProvider.get());
  }

  public static RemoteModule_ProvidesHarryPotterServiceFactory create(
      RemoteModule module, Provider<Retrofit> retrofitProvider) {
    return new RemoteModule_ProvidesHarryPotterServiceFactory(module, retrofitProvider);
  }

  public static HarryPotterService proxyProvidesHarryPotterService(
      RemoteModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.providesHarryPotterService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
